---
import BaseLayout from "./BaseLayout.astro";

export interface LinkItem {
    href: string;
    label: string;
    external?: boolean;
    context?: "summary" | "detail";
}
export interface DetailLayoutProps {
    title: string;
    synopsis?: string;
    year?: string;
    links?: LinkItem[];
    domains?: string[];
    image?: string;
    imageAlt?: string;
    tools?: string;
    language?: string;
}

const {
    title,
    synopsis = "",
    year,
    links = [],
    domains = [],
    image,
    imageAlt = "",
    tools = "",
    language = "",
} = Astro.props as DetailLayoutProps;

const detailLinks = (links || []).filter((l) => l.context === "detail");
---

<BaseLayout {title} description={synopsis}>
    <main id="content" class="detail-surface">
        <header aria-labelledby="detail-title" class="work-row detail-header">
            <!-- Left column: reuse WorkRow meta stack -->
            <div class="work-meta">
                <h3 id="detail-title" class="work-row__title">{title}</h3>
                {synopsis && <p class="work-row__synopsis">{synopsis}</p>}
                {year && <p class="work-row__year">{year}</p>}
                {detailLinks.length > 0 && (
                    <ul class="work-row__links">
                        {detailLinks.map((l) => (
                            <li>
                                <a
                                    class={`work-link ${l.external ? "work-link--external" : "work-link--detail"}`}
                                    href={l.href}
                                    target={l.external ? "_blank" : undefined}
                                    rel={l.external ? "noopener noreferrer" : undefined}
                                >
                                    {l.label}
                                </a>
                            </li>
                        ))}
                    </ul>
                )}
            </div>

            <!-- Right column: domains + tools/language in one wrapper for divider -->
            <div class="detail-right">
                {domains.length > 0 && (
                    <div class="work-row__domains">
                        {domains.map((t) => (
                            <span class="chip">{t}</span>
                        ))}
                    </div>
                )}

                {(tools || language) && (
                    <div class="work-links-and-meta">
                        {tools && <p class="text work-tools">Tools | {tools}</p>}
                        {language && <p class="text work-language">Language | {language}</p>}
                    </div>
                )}
            </div>
        </header>
        <slot />
    </main>
</BaseLayout>
